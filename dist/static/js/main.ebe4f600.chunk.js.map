{"version":3,"sources":["component/layout/LogIn.js","store/actions/authActions.js","component/layout/LogOut.js","component/layout/Navbar.js","component/project/ProjectSummary.js","component/project/ProjectList.js","component/dashboard/Notifications.js","component/dashboard/Dashboard.js","component/project/ProjectDetails.js","component/auth/SignIn.js","component/auth/SignUp.js","component/project/CreatePoject.js","store/actions/projectActions.js","component/App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","LogOut","state","firebase","links","uid","layout_LogIn","layout_LogOut","Link","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","project_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","storage","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","component_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebe4f600.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst LogIn = (props) => {\n    return (\n        <div>\n            <ul className=\"right\">\n                <li><NavLink to='/createProject'>New Project</NavLink></li>\n                <li><button onClick={props.signOut}>Log Out</button></li>\n                <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n            </ul>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(LogIn)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","\n    \nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst LogOut = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default LogOut","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport LogIn from './LogIn'\nimport LogOut from './LogOut'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    //   console.log(auth);\n    const links = auth.uid ? <LogIn  profile={profile}/> : <LogOut />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">Capstone</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title \">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id}>\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"online-users\">\n                        {notifications && notifications.map(item => {\n                            return <li key={item.id}>\n                                <span className=\"pink-text\">{item.user} </span>\n                                <span>{item.content}</span>\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../project/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' /> \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"center red-text\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"center red-text\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (creds) => dispatch(signUp(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth} = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n                    <div className=\"input-field\">\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\n                        <label htmlFor=\"title\">Project Title</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                        <label htmlFor=\"content\">Project Content</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './layout/Navbar'\nimport Dashboard from './dashboard/Dashboard'\nimport ProjectDetails from './project/ProjectDetails'\nimport SignIn from './auth/SignIn'\nimport SignUp from './auth/SignUp'\nimport CreateProject from './project/CreatePoject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/createProject' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state;\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyBgmEasGVGUPPqZpKgG0pV-9n6QSomUbgc\",\n    authDomain: \"capstone-1996.firebaseapp.com\",\n    databaseURL: \"https://capstone-1996.firebaseio.com\",\n    projectId: \"capstone-1996\",\n    storageBucket: \"capstone-1996.appspot.com\",\n    messagingSenderId: \"488403964252\"\n};\nfirebase.initializeApp(config);\nconst storage = firebase.storage();\n\nexport {\n    storage, firebase as default\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(firebaseConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true }),\n        reduxFirestore(firebaseConfig) // redux bindings for firestore\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    serviceWorker.unregister();\n});"],"sourceRoot":""}